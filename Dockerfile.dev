# syntax=docker/dockerfile:1
# check=error=true

# Make sure RUBY_VERSION matches the Ruby version in .ruby-version
ARG RUBY_VERSION=3.4.4
FROM docker.io/library/ruby:$RUBY_VERSION-slim

# Rails app lives here
WORKDIR /rails

# Set development environment
ENV RAILS_ENV="development" \
    BUNDLE_PATH="/usr/local/bundle" \
    BUNDLE_WITHOUT="production"

# Install all packages needed for development
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y \
        build-essential \
        curl \
        git \
        libjemalloc2 \
        libpq-dev \
        libyaml-dev \
        pkg-config \
        postgresql-client \
        procps && \
    rm -rf /var/lib/apt/lists /var/cache/apt/archives

# Create rails user
RUN groupadd --system --gid 1000 rails && \
    useradd rails --uid 1000 --gid 1000 --create-home --shell /bin/bash

# Create and set permissions for bundle path
RUN mkdir -p "${BUNDLE_PATH}" && \
    chown -R rails:rails "${BUNDLE_PATH}" && \
    chmod -R 755 "${BUNDLE_PATH}"

# Copy Gemfile and Gemfile.lock first for better layer caching
COPY --chown=rails:rails Gemfile Gemfile.lock ./

# Switch to rails user before installing gems
USER rails:rails

# Install gems as rails user
RUN bundle install

# Switch back to root to copy and set permissions
USER root

# Copy application code
COPY --chown=rails:rails . .

# Create directories and set permissions
RUN mkdir -p db log tmp && \
    chown -R rails:rails db log tmp

# Switch back to rails user
USER rails:rails

# Precompile bootsnap code for faster boot times
RUN bundle exec bootsnap precompile --gemfile && \
    bundle exec bootsnap precompile app/ lib/

# Entrypoint prepares the database.
ENTRYPOINT ["/rails/bin/docker-entrypoint"]

# Start server via Thruster by default, this can be overwritten at runtime
EXPOSE 3000
CMD ["./bin/rails", "server", "-b", "0.0.0.0"]